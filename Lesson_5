Задача 1

Имеется база данных – социальная сеть.
База данных содержит сущности:
users – пользователи;
messages – сообщения;
friend_requests – заявки на дружбу;
communities – сообщества;
users_communities – пользователи сообществ;
media_types – типы медиа;
media – медиа;
likes – лайки;
profiles – профили пользователя.

У сущности «пользователи» имеются следующие поля(атрибуты):
id – идентификатор;
firstname – имя;
lastname - фамилия;
email - адрес электронной почты.

У сущности «сообщения» имеются следующие поля(атрибуты):
id – идентификатор;
from_user_id – отправитель;
to_user_id – получатель;
body - содержимое;
created_at - дата отправки.

Найти количество сообщений, отправленных каждым пользователей.
В зависимости от количества отправленных сообщений рассчитать ранг пользователей, первое место присвоив пользователю(ям) с наибольшим количеством отправленных сообщений.

Вывести полученный ранг, имя, фамилия, пользователя и кол-во отправленных сообщений. Выводимый список необходимо отсортировать в порядке возрастания ранга.

Решение:

SELECT DENSE_RANK() OVER (ORDER BY COUNT(m.from_user_id) DESC) AS 'Место в рейтинге',
  u.firstname, u.lastname,
	COUNT(m.from_user_id) AS 'Количество отправленных сообщений'
FROM users u
LEFT JOIN messages m ON u.id = m.from_user_id
GROUP BY u.id;

	Место в рейтинге	firstname	lastname	Количество отправленных сообщений
1	1	Jaida	Kilback	7
2	2	Reuben	Nienow	4
3	2	Norene	West	4
4	3	Frederik	Upton	2
5	4	Unique	Windler	1
6	4	Mireya	Orn	1
7	4	Jordyn	Jerde	1
8	5	Frederick	Effertz	0
9	5	Victoria	Medhurst	0
10	5	Austyn	Braun	0


Задача 2 

Имеется база данных – социальная сеть.
База данных содержит сущности:
users – пользователи;
messages – сообщения;
friend_requests – заявки на дружбу;
communities – сообщества;
users_communities – пользователи сообществ;
media_types – типы медиа;
media – медиа;
likes – лайки;
profiles – профили пользователя.

У сущности «сообщения» имеются следующие поля(атрибуты):
id – идентификатор;
from_user_id – отправитель;
to_user_id – получатель;
body - содержимое;
created_at - дата отправки.

Получите список сообщений, отсортированных по возрастанию даты отправки.
Вычислите разность между соседними значениями дат отправки. Разности выразите в минутах.

Выведите идентификатор сообщения, дату отправки, дату отправки следующего сообщения и разницу даты отправки соседних сообщений.

Решение:

SELECT id, created_at,
LEAD(created_at) OVER() AS next_date,
TIMESTAMPDIFF(MINUTE, created_at, LEAD(created_at) OVER()) AS difference
FROM messages ORDER BY TIMESTAMPDIFF(SECOND, created_at, NOW()) DESC;

	id	created_at	next_date	difference
1	1	2023-10-16 19:50:52	2023-10-16 19:52:52	2
2	2	2023-10-16 19:52:52	2023-10-16 19:54:52	2
3	3	2023-10-16 19:54:52	2023-10-16 20:00:52	6
4	4	2023-10-16 20:00:52	2023-10-16 20:01:52	1
5	5	2023-10-16 20:01:52	2023-10-16 20:03:52	2
6	6	2023-10-16 20:03:52	2023-10-16 20:04:52	1
7	7	2023-10-16 20:04:52	2023-10-16 20:10:52	6
8	8	2023-10-16 20:10:52	2023-10-16 20:11:52	1
9	9	2023-10-16 20:11:52	2023-10-16 20:14:52	3
10	10	2023-10-16 20:14:52	2023-10-16 20:16:52	2
11	11	2023-10-16 20:16:52	2023-10-16 20:17:52	1
12	12	2023-10-16 20:17:52	2023-10-16 20:22:52	5
13	13	2023-10-16 20:22:52	2023-10-16 20:24:52	2
14	14	2023-10-16 20:24:52	2023-10-16 20:24:52	0
15	15	2023-10-16 20:24:52	2023-10-16 20:26:52	2
16	16	2023-10-16 20:26:52	2023-10-16 20:26:52	0
17	17	2023-10-16 20:26:52	2023-10-16 20:30:52	4
18	18	2023-10-16 20:30:52	2023-10-16 20:31:52	1
19	19	2023-10-16 20:31:52	2023-10-16 20:39:52	8
20	20	2023-10-16 20:39:52	null	null

 
