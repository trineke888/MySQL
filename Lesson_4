Задача 1

Имеется база данных – социальная сеть.

База данных содержит сущности:
users – пользователи;
messages – сообщения;
friend_requests – заявки на дружбу;
communities – сообщества;
users_communities – пользователи сообществ;
media_types – типы медиа;
media – медиа;
likes – лайки;
profiles – профили пользователя.
Найдите общее количество лайков, которые получили пользователи женского пола.

Решение:

-- Вы работаете с MySQL
-- Введите свой код ниже
SELECT COUNT(*) AS likes_count
FROM profiles AS pf
INNER JOIN media AS m ON pf.user_id = m.user_id
INNER JOIN likes AS l ON l.media_id = m.id
WHERE pf.gender = 'f';

Задача 2

Найдите количество лайков, которые поставили пользователи женского пола и мужского пола.
Выведите название пола (преобразовав значение атрибута f в женский, а значение ‘m` - мужской) и количество, поставленных лайков, применив к количеству лайков сортировку по убыванию.

Решение:

-- Вы работаете с MySQL
-- Введите свой код ниже
SELECT IF(pf.gender = 'm', 'мужской', 'женский') AS gender,
COUNT(*)
FROM profiles AS pf
INNER JOIN likes AS l ON l.user_id = pf.user_id
GROUP BY gender;

Задача 3

Имеется база данных – социальная сеть.
Выведите идентификаторы пользователей, которые не отправляли ни одного сообщения.

Решение:

SELECT DISTINCT id AS 'id'
FROM users
WHERE NOT EXISTS (
	SELECT from_user_id
	FROM messages
	WHERE users.id = messages.from_user_id
);

Задача 4

Имеется база данных – социальная сеть.
Друзья — это пользователи у которых имеется соответствующая запись (заявка) в сущности «заявки на дружбу» и в атрибуте status данной сущности указано значение 'approved'.

Найдите количество друзей у каждого пользователя. Выведите для каждого пользователя идентификатор пользователя, имя, фамилию и количество друзей cnt. Сортировка выводимых записей в порядке возрастания идентификатора пользователя.

Решение:

SELECT 
u.id, 
u.firstname, 
u.lastname, 
COUNT(fr.status) AS cnt 
FROM users u
LEFT JOIN friend_requests fr ON (u.id = fr.initiator_user_id or u.id = fr.target_user_id) AND fr.status = 'approved'
GROUP BY u.id
ORDER BY u.id;
